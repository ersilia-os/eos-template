# Workflow to test the model image on both Ubuntu and MacOS platforms
# This workflow is triggered when the workflow to upload the model to DockerHub is completed
# We will run the test playground from ersilia to test the model image
# We will store the architecture information in a file and upload it as an artifact
name: Test model image

on:
  workflow_run:
    workflows: ["Upload model to DockerHub"]
    types:
      - completed

jobs:
  test-image:
    if: ${{ github.repository != 'ersilia-os/eos-template' }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - uses: actions/setup-python@5.3.0
        with:
          python-version: "3.10"
      
      # Checkout ersilia so we can run the testing playground
      - name: Checkout ersilia
        uses: actions/checkout@v4.2.2
        with:
          repository: ersilia-os/ersilia
          ref: master
          path: ersilia
      
      # Install ersilia with the test extra
      - name: Install ersilia
        run: |
          python -m pip install '.[test]'
      
      # TODO(@dhanshree and @abel): Configure the environment variable to for the model and tag
      # Run the test playground
      - name: Run the test playground
        id: test-playground
        continue-on-error: true
        env:
          MODEL: ${{ github.event.repository.name }}
          TAG: ${{ inputs.tag }}
        run: |
          cd ersilia/test/playground
          nox -f noxfile.py -s test_from_dockerhub > log.txt
      
      # We will parse the log to see if the test passed
      - name: Parse log
        run: |
          cat log.txt

      # Store architecture information
      # If test-playground succeeds we save amd if run on ubuntu, arm if run on macos
      - name: Store architecture information
        id: architecture
        if: steps.test-playground.outcome == 'success'
        run: |
          if [[ ${{ matrix.platform }} == 'ubuntu-latest' ]]; then
            echo "success" > amd.txt
          else
            echo "success" > arm.txt
          fi

      # Upload log artifact from the playground and the architecture information
      - name: Upload log artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          retention-days: 14
          path: |
            *.txt

