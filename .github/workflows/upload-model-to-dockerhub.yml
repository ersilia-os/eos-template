name: Upload model to DockerHub
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Upload model to S3"]
    types:
      - completed
  
jobs:
  build-and-push-ersilia-pack:
  uses: ./.github/workflows/upload-ersilia-pack.yml

  build-and-push-multistage-condapack:
  if: hashFiles('install.yml') == ''
  uses: ./.github/workflows/upload-multistage-condapack.yml
  
  build-and-push-legacy-bentoml:
  if: hashFiles('install.yml') == ''
  uses: ./.github/workflows/upload-legacy-bentoml.yml

  post-model-upload:
    runs-on: ubuntu-latest
    steps:

      - name: Check if repo follows the Ersilia Pack eos-template
        id: isErsiliaPackTemplate
        run: |
          if [ -f install.yml ]; then
            echo "ERSILIA_PACK=true" >> $GITHUB_ENV
          else
            echo "ERSILIA_PACK=false" >> $GITHUB_ENV
          fi


      - name: Download arch.txt
        uses: actions/download-artifact@v3
        with:
          name: arch
          path: ./arch.txt

      - name: Update Metadata YAML file with DockerHub info
        id: updateMetadata
        run: |
          mv Dockerfile_legacy Dockerfile
          python3 -c "
          import yaml
          with open('metadata.yml', 'r') as f:
             data = yaml.safe_load(f)
          print(data)
          with open('arch.txt', 'r') as f:
             arch = f.read().rstrip()
             arch = arch.split(',')
          data['DockerHub'] = 'https://hub.docker.com/r/ersiliaos/{0}'.format(data['Identifier'])
          data['Docker Architecture'] = arch
          with open('metadata.yml', 'w') as f:
             yaml.dump(data, default_flow_style=False, sort_keys=False)
          "
          rm arch.txt
          
      - name: Commit and push changes done to the Metadata YAML file
        uses: actions-js/push@156f2b10c3aa000c44dbe75ea7018f32ae999772 # pin@v1.4
        with:
          author_name: "ersilia-bot"
          author_email: "ersilia-bot@users.noreply.github.com"
          message: "updating metadata [skip ci]"
          repository: "ersilia-os/${{ github.event.repository.name }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          amend: true
          force: true
  
      - name: Update metadata to AirTable
        id: update-metadata-to-airtable
        env:
          USER_NAME: ${{ github.repository_owner }}
          BRANCH: "main"
          REPO_NAME: ${{ github.event.repository.name }}
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
        run: |
          source activate
          echo "Updating metadata to AirTable looking at owner: $USER_NAME"
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/update_metadata_to_airtable.py
          python3 update_metadata_to_airtable.py $USER_NAME $REPO_NAME $BRANCH $AIRTABLE_API_KEY
          rm update_metadata_to_airtable.py
  
      - name: Update README file
        id: update-readme-file
        env:
          MODEL_ID: ${{ github.event.repository.name }}
        run: |
          source activate
          echo "Updating README file with AirTable metadata for model: $MODEL_ID"
          wget https://raw.githubusercontent.com/ersilia-os/ersilia/master/.github/scripts/update_readme_from_airtable.py
          python3 update_readme_from_airtable.py $MODEL_ID .
          rm update_readme_from_airtable.py
          less README.md

      - name: Commit and push changes done to the README file
        uses: actions-js/push@156f2b10c3aa000c44dbe75ea7018f32ae999772 # pin@v1.4
        with:
          author_name: "ersilia-bot"
          author_email: "ersilia-bot@users.noreply.github.com"
          message: "updating readme [skip ci]"
          repository: "ersilia-os/${{ github.event.repository.name }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          amend: true
          force: true

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ersiliaos/${{ github.event.repository.name }}
          short-description: "Ersilia Model Hub Identifier: ${{ github.event.repository.name }}"

      # Create an issue within the repository to track that this model is ready for testing

      - name: Shuffle assignees
        id: shuffle
        run: |
          export assignees=$(echo "${{ vars.assignees }}" | awk 'BEGIN {FS=","}; {srand();split($0,a,FS); print a[int(rand()*NF+1)]}')
          echo "$assignees" >> $GITHUB_STEP_SUMMARY
          echo "shuffled_assignee=$assignees" >> $GITHUB_OUTPUT
          echo "shuffled_assignee=$assignees" >> $GITHUB_ENV

      - name: Check for existing issue
        id: check_existing_test_issue
        run: |
          gh auth login --with-token <<< ${{ secrets.GITHUB_TOKEN }}
          issue_number=$(gh issue list --limit 100 --search "${{ vars.test_issue_title }}" --json number --jq '.[0].number')
          echo "::set-output name=issue_number::$issue_number"
   
      - name: Create a Test issue
        uses: actions-ecosystem/action-create-issue@b63bc2bbacb6a838dfe4a9f70da6665ae0962a49
        id: create_test_issue 
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ vars.TEST_ISSUE_TITLE }}
          assignees: |
            ${{ steps.shuffle.outputs.shuffled_assignee }}
          body: |
            This model is a new incorporation to the Ersilia Model Hub or it has been modified. If you are assigned to this issue, please try it out and ensure everything works!
            To test a model, first clone it in your local system (ideally, from dockerhub) using the CLI commands:
            ```
            ersilia -v fetch eosxxxx --from_dockerhub
            ersilia serve eosxxxx
            ersilia test
            ```
            The test command will automatically check that the model can handle null outputs and whether it produces consistent results. Please copy here the result of the test command. If it passes, simply close the issue as completed. If it fails, please detail at which step and whether you have taken any steps to solve it. Please tag the original model contributor and one of Ersilia's maintainers for support.
          labels: |
            test
        if: steps.check_existing_test_issue.outputs.issue_number == ''
